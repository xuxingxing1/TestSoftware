一、git 是什么？
	git是目前世界上最先进的分布式版本控制系统

二、如何在windows上安装git？
	msysgit 是windows版本的git
	下载后安装msysgitGit_xxxxxx.exe
	在开始菜单中找到Git --> Git Bash
	运行即可看到git的命令行界面

三、设置git 的用户名和邮箱

	输入命令$ git config --global user.name "xuxingxing"

	输入命令$ git config --global user.email "1193060491@qq.com"

四、创建版本库和第一次提交

	先在硬盘中创建一个文件夹例如/home/xuxingxing/workspace/TestSoftware
	这个文件夹下原先是我的java练习目录
	目录中有:文件夹bin;文件夹src……等文件

	输入命令$ cd /home/xuxingxing/workspace/TestSoftware

	输入命令$ git init
	将这个目录变成一个本地化的git仓库

	输入命令S git add .
	将这个文件夹下的全部文件夹和文件都加载到仓库暂存区中

	输入命令$ git commit -m "这个文件夹的第一次提交！"
	将暂存区中的内容正式提交到仓库中，并且填写版本注释

	输入命令$ git status
	查看现在是否提交完成

五、提交修改过的代码

	修改TestSoftware/src/zrkj/DataFile.java 文件
	
	输入命令$ git status
	查看是否有文件未提交
	结果肯定是提示有文件被修改

	输入命令$ git diff src/zrkj/DataFile.java
	查看修改的内容

	输入命令$ git add src/zrkj/DataFile.java
	将修改过的文件提交到仓库暂存区

	输入命令S git commit -m "这次是修改了DataFile.java文件"
	正式提交到仓库中，并填写版本注释

六、查看版本提交的历史记录

	输入命令$ git log
	即可查看全部历史记录，当然修改过很多版本后，历史记录会很多

	输入命令$ git log --pretty=oneline
	即可将每次提交记录，显示成一行，便于查看

七、版本回退

	输入命令$ git reset --hard HEAD^
	则仓库会回退到上一个版本，
	如果要回退到上上一个版本则将HEAD^改为HEAD^^
	如果要回退到前100个版本，则将HEAD^改为HEAD~100

	也可以通过版本号来回退到任意一个版本
	输入命令S git reflog
	可以查看所有版本的对应版本号，请注意0,1,2,3不是版本号，
	最前面的7位16进制数才是版本号

	输入命令$ git reset --hard f364951
	则可以回退到任意一个版本

八、撤销当前修改
	编辑完代码后，如果不想保留这次编辑，要恢复到上一个版本，
	即撤销这次编辑。我们有3种方法。
	1、修改代码文件。直接删除掉这次编辑的内容，恢复到未编辑过的状态
	2、使用命令 git reset --hard HEAD^ 回退到上一个版本
	3、输入命令$ git status 查看这次编辑过的文件
	输入命令$ git checkout -- readme.txt
	最后一个是编辑过的文件名，直接将本次对这个文件的修改丢弃

九、删除文件
	输入命令$ rm readme.txt
	删除这个文件

	输入命令$ git add .
	将本次的修改提交到暂存区

	输入命令$ git commit -m "这次删除了readme.txt这个文件"
	将暂存区的信息提交到版本仓库

十、远程仓库
	10.1、注册github账号
	由于本地的git仓库和github仓库之间的传输是通过SSH加密的，
	所以需要创建SSH Key
	首先，在用户的主目录下，看看有没有.ssh文件夹，如果有，
	再看看这个目录下有没有id_rsa和id_rsa.pub这2个文件，
	如果都有则跳过这一步。如果没有，
	输入命令$ ssh-kegen -t rsa -C "1193060491@qq.com"
	则生成了SSH Key，在主目录下会生成上面说的文件夹和文件
	其中id_rsa是私钥，id_rsa.pub是公钥，公钥可以告诉别人。

	10.2、登陆github，创建一个空的仓库
	登陆github.com网站，根据提示注册账号，并建立一个新的在线仓库。
	例如：我创建的仓库名称为xuxingxing1/TestSoftware.git
	打开“settings”中的Deploy Keys页面，
	然后点击“Add deploy Key”，填写上任意的title，在Key文本框里
	粘贴id_rsa.pub的内容。Allow write access打钩，再点击add key

	10.3、第一次同步本地代码到云端
	点击<>code，进入代码管理界面。根据提示，选择提交一个已经存在的仓库。
	输入代码$ git remote add origin git@github.com:xuxingxing1/TestSoftware.git
	输入代码$ git push -u origin master
	推送成功后，可以立刻在github页面上看到和本地一模一样的库了
	此时真正的在线分布式版本库已经建立了。

	10.4、向github推送最新修改的内容
	输入命令$ git push origin master
	即可将当前本地的最新修改推送到github上

	10.5、新员工从github克隆到本地库
	输入命令$ git clone git@github.com:xuxingxing1/TestSoftware.git

十一、创建与合并分支

	11.1创建并切换分支
	输入命令$ git checkout -b testsql
	即可创建并切换到testsql分支

	输入命令$ git branch
	查看分支

	单独的分离命令如下
	查看分支：git branch
	创建分支：git branch testsql  (testsql是分支名称)
	切换分支：git checkout testsql  (testsql是分支名称)
	创建+切换分支：git checkout -b testsql  (testsql是分支名称)
	合并某分支到当前分支：git merge testsql  (testsql是分支名称)
	删除分支：git branch -d testsql  (testsql是分支名称)
